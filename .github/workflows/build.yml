name: build-luci-app-nodemanager
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: mediatek-filogic
            sdk:  https://downloads.openwrt.org/releases/24.10.2/targets/mediatek/filogic/openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          #- name: x86-64
          #  sdk:  https://downloads.openwrt.org/releases/24.10.2/targets/x86/64/openwrt-sdk-24.10.2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gawk unzip libncurses5-dev zstd rsync file curl

      - name: Download & extract SDK
        run: |
          set -e
          curl -L --fail -o sdk.tar.zst "${{ matrix.target.sdk }}"
          tar -I zstd -xf sdk.tar.zst
          SDK_DIR="$(tar -I zstd -tf sdk.tar.zst | head -1 | cut -d/ -f1)"
          echo "SDK_DIR=$SDK_DIR" >> "$GITHUB_ENV"
          ln -s "$SDK_DIR" sdk

      - name: Setup feeds (luci only, openwrt-24.10)
        run: |
          set -e
          cd "$SDK_DIR"
          BRANCH="openwrt-24.10"
          if [ ! -x scripts/feeds ]; then
            mkdir -p scripts
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/feeds" -o scripts/feeds
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/metadata.pm" -o scripts/metadata.pm
            chmod +x scripts/feeds
          fi
          echo "src-git luci https://github.com/openwrt/luci.git;${BRANCH}" > feeds.conf
          ./scripts/feeds update luci
          ./scripts/feeds install -p luci luci-base luci-compat

      - name: Build po2lmo (manually from luci source)
        run: |
          set -e
          cd "$SDK_DIR"
          # 直接用 luci 源码的 po2lmo 工程编译
          make -C feeds/luci/modules/luci-base/src/po2lmo
          mkdir -p staging_dir/host/bin
          cp -vf feeds/luci/modules/luci-base/src/po2lmo/po2lmo staging_dir/host/bin/po2lmo
          echo "== staging_dir/host/bin =="
          ls -l staging_dir/host/bin
          test -x staging_dir/host/bin/po2lmo

      - name: Put our package into SDK (safe copy)
        run: |
          set -e
          cd "$GITHUB_WORKSPACE"
          PKGROOT="$GITHUB_WORKSPACE/$SDK_DIR/package/luci-app-nodemanager"
          rm -rf "$PKGROOT"
          mkdir -p "$PKGROOT"
          # 用 tar 管道拷贝，避免把仓库拷进自己
          tar -cf - \
            --exclude='./.git' \
            --exclude="./$SDK_DIR" \
            --exclude='./sdk' \
            . \
          | tar -C "$PKGROOT" -xf -

      - name: Sanity check zh-cn PO domain
        run: |
          set -e
          cd "$SDK_DIR/package/luci-app-nodemanager"
          if [ ! -s po/zh-cn/nodemanager.po ]; then
            echo "::error::missing po/zh-cn/nodemanager.po (domain must be 'nodemanager')"
            exit 1
          fi

      - name: Seed .config & defconfig
        run: |
          set -e
          cd "$SDK_DIR"
          cat >> .config <<'EOF'
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_PACKAGE_luci-app-nodemanager=y
          CONFIG_PACKAGE_luci-i18n-nodemanager-zh-cn=y
          EOF
          make defconfig

      - name: Build app + zh-cn i18n
        run: |
          set -e
          cd "$SDK_DIR"
          make package/luci-app-nodemanager/compile -j$(nproc) V=sc
          # 显式构建中文语言包（两条路径都尝试，兼容不同 feed 命名）
          make package/luci-i18n-nodemanager-zh-cn/compile -j$(nproc) V=sc || \
          make package/feeds/luci/luci-i18n-nodemanager-zh-cn/compile -j$(nproc) V=sc

      - name: Collect artifacts
        run: |
          set -e
          cd "$SDK_DIR"
          OUT="$GITHUB_WORKSPACE/out/${{ matrix.target.name }}"
          mkdir -p "$OUT"
          find bin/packages -type f -name 'luci-app-nodemanager_*.ipk' -exec cp -v '{}' "$OUT/" \;
          find bin/packages -type f -name 'luci-i18n-nodemanager-zh-cn_*.ipk' -exec cp -v '{}' "$OUT/" \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-nodemanager-${{ matrix.target.name }}
          path: out/${{ matrix.target.name }}/*.ipk
          if-no-files-found: error
