name: build-luci-app-nodemanager
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        target:
          #- name: mediatek-filogic
          #  sdk: https://downloads.openwrt.org/releases/24.10.2/targets/mediatek/filogic/openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          - name: x86-64
            sdk: https://downloads.openwrt.org/releases/24.10.2/targets/x86/64/openwrt-sdk-24.10.2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install minimal deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gawk unzip zstd rsync file curl gcc

      - name: Download & extract SDK
        run: |
          set -e
          curl -L --fail -o sdk.tar.zst "${{ matrix.target.sdk }}"
          tar -I zstd -xf sdk.tar.zst
          SDK_DIR="$(tar -I zstd -tf sdk.tar.zst | head -1 | cut -d/ -f1)"
          echo "SDK_DIR=$SDK_DIR" >> "$GITHUB_ENV"
          ln -s "$SDK_DIR" sdk

      - name: Setup luci feed (openwrt-24.10)
        run: |
          set -e
          cd "$SDK_DIR"
          BRANCH="openwrt-24.10"
          if [ ! -x scripts/feeds ]; then
            mkdir -p scripts
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/feeds" -o scripts/feeds
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/metadata.pm" -o scripts/metadata.pm
            chmod +x scripts/feeds
          fi
          echo "src-git luci https://github.com/openwrt/luci.git;${BRANCH}" > feeds.conf
          ./scripts/feeds update luci
          ./scripts/feeds install -p luci luci-base luci-compat

      - name: Seed .config (ONLY our app & zh-cn; hard-disable lucihttp*)
        run: |
          set -e
          cd "$SDK_DIR"
          # 只启用我们的包与中文语言包
          cat > .config <<'EOF'
          CONFIG_PACKAGE_luci-app-nodemanager=y
          CONFIG_PACKAGE_luci-i18n-nodemanager-zh-cn=y
          # 明确关闭 lucihttp 及其 Lua 绑定，避免触发 lua.h
          #（写在 .config，后面再 defconfig，不会被重新打开）
          # CONFIG_PACKAGE_liblucihttp is not set
          # CONFIG_PACKAGE_lucihttp is not set
          # CONFIG_PACKAGE_lucihttp-lua is not set
          EOF
          make defconfig
          # 保险起见，再写一次关闭项并不跑 defconfig，确保最终生效
          {
            echo '# CONFIG_PACKAGE_liblucihttp is not set'
            echo '# CONFIG_PACKAGE_lucihttp is not set'
            echo '# CONFIG_PACKAGE_lucihttp-lua is not set'
          } >> .config

      - name: Put our package into SDK
        run: |
          set -e
          cd "$GITHUB_WORKSPACE"
          PKGROOT="$GITHUB_WORKSPACE/$SDK_DIR/package/luci-app-nodemanager"
          rm -rf "$PKGROOT"
          mkdir -p "$PKGROOT"
          # 用 tar 管道避免把 SDK 自己打回去
          tar -cf - \
            --exclude='./.git' \
            --exclude="./$SDK_DIR" \
            --exclude='./sdk' \
            . \
          | tar -C "$PKGROOT" -xf -

      - name: Build po2lmo (LuCI official src)
        run: |
          set -e
          cd "$SDK_DIR"
          test -d feeds/luci/modules/luci-base/src || { echo "::error::luci-base src not found"; exit 1; }
          make -C feeds/luci/modules/luci-base/src clean po2lmo V=sc
          install -D -m0755 feeds/luci/modules/luci-base/src/po2lmo staging_dir/host/bin/po2lmo
          install -D -m0755 feeds/luci/modules/luci-base/src/po2lmo staging_dir/hostpkg/bin/po2lmo
          echo "PATH=$PWD/staging_dir/hostpkg/bin:$PWD/staging_dir/host/bin:$PATH" >> "$GITHUB_ENV"
          echo "PO2LMO=$PWD/staging_dir/hostpkg/bin/po2lmo" >> "$GITHUB_ENV"

      - name: Build app + zh-cn i18n (no lucihttp, no lua)
        run: |
          set -e
          cd "$SDK_DIR"
          export PATH="$PWD/staging_dir/hostpkg/bin:$PWD/staging_dir/host/bin:$PATH"
          export PO2LMO="${PO2LMO:-$PWD/staging_dir/hostpkg/bin/po2lmo}"
          # 仅编译我们的包（不会拉起 lucihttp*/lua*）
          make -j1 V=s package/luci-app-nodemanager/compile
          # 中文语言包（两种路径都试一下）
          make -j1 V=s package/luci-i18n-nodemanager-zh-cn/compile || \
          make -j1 V=s package/feeds/luci/luci-i18n-nodemanager-zh-cn/compile

      - name: Collect artifacts
        run: |
          set -e
          cd "$SDK_DIR"
          OUT="$GITHUB_WORKSPACE/out/${{ matrix.target.name }}"
          mkdir -p "$OUT"
          find bin/packages -type f -name 'luci-app-nodemanager_*.ipk' -exec cp -v '{}' "$OUT/" \;
          find bin/packages -type f -name 'luci-i18n-nodemanager-zh-cn_*.ipk' -exec cp -v '{}' "$OUT/" \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-nodemanager-${{ matrix.target.name }}
          path: out/${{ matrix.target.name }}/*.ipk
          if-no-files-found: error
