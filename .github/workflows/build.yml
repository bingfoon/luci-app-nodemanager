name: build-luci-app-nodemanager
'on':
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: mediatek-filogic
            sdk: https://downloads.openwrt.org/releases/24.10.2/targets/mediatek/filogic/openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          #- name: x86-64
          #  sdk: https://downloads.openwrt.org/releases/24.10.2/targets/x86/64/openwrt-sdk-24.10.2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gawk unzip libncurses5-dev zstd rsync file curl gcc

      - name: Download & extract SDK
        run: |
          set -e
          curl -L --fail -o sdk.tar.zst "${{ matrix.target.sdk }}"
          tar -I zstd -xf sdk.tar.zst
          SDK_DIR="$(tar -I zstd -tf sdk.tar.zst | head -1 | cut -d/ -f1)"
          echo "SDK_DIR=$SDK_DIR" >> "$GITHUB_ENV"
          ln -s "$SDK_DIR" sdk

      - name: Setup feeds (luci only, openwrt-24.10)
        run: |
          set -e
          cd "$SDK_DIR"
          BRANCH="openwrt-24.10"
          if [ ! -x scripts/feeds ]; then
            mkdir -p scripts
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/feeds" -o scripts/feeds
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/metadata.pm" -o scripts/metadata.pm
            chmod +x scripts/feeds
          fi
          echo "src-git luci https://github.com/openwrt/luci.git;${BRANCH}" > feeds.conf
          ./scripts/feeds update luci
          ./scripts/feeds install -p luci luci-base luci-compat

      - name: "Build po2lmo (via luci src Makefile -> host+hostpkg)"
        run: |
          set -e
          cd "$SDK_DIR"
          # 用 luci-base/src 的 Makefile 生成 po2lmo
          test -d feeds/luci/modules/luci-base/src || {
            echo "::error::luci-base src not found (check feeds branch openwrt-24.10)"
            exit 1
          }
          make -C feeds/luci/modules/luci-base/src clean po2lmo V=sc

          # 同时安装到 host/bin 与 hostpkg/bin（24.10 常用 hostpkg）
          install -D -m0755 feeds/luci/modules/luci-base/src/po2lmo staging_dir/host/bin/po2lmo
          install -D -m0755 feeds/luci/modules/luci-base/src/po2lmo staging_dir/hostpkg/bin/po2lmo

          echo "== host bins =="
          ls -l staging_dir/host/bin || true
          echo "== hostpkg bins =="
          ls -l staging_dir/hostpkg/bin || true

          test -x staging_dir/host/bin/po2lmo
          test -x staging_dir/hostpkg/bin/po2lmo

          # 导出给后续 step
          echo "PATH=$PWD/staging_dir/hostpkg/bin:$PWD/staging_dir/host/bin:$PATH" >> "$GITHUB_ENV"
          echo "PO2LMO=$PWD/staging_dir/hostpkg/bin/po2lmo" >> "$GITHUB_ENV"

      - name: Put our package into SDK (safe copy)
        run: |
          set -e
          cd "$GITHUB_WORKSPACE"
          PKGROOT="$GITHUB_WORKSPACE/$SDK_DIR/package/luci-app-nodemanager"
          rm -rf "$PKGROOT"
          mkdir -p "$PKGROOT"
          # 用 tar 管道拷贝，避免“把仓库拷到自己里面”的循环错误
          tar -cf - \
            --exclude='./.git' \
            --exclude="./$SDK_DIR" \
            --exclude='./sdk' \
            . \
          | tar -C "$PKGROOT" -xf -

      - name: Sanity check zh-cn PO domain
        run: |
          set -e
          cd "$SDK_DIR/package/luci-app-nodemanager"
          if [ ! -s po/zh-cn/nodemanager.po ]; then
            echo "::error::missing po/zh-cn/nodemanager.po (domain must be 'nodemanager')"
            exit 1
          fi

      - name: Seed .config & defconfig
        run: |
          set -e
          cd "$SDK_DIR"
          cat >> .config <<'EOF'
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_PACKAGE_luci-app-nodemanager=y
          CONFIG_PACKAGE_luci-i18n-nodemanager-zh-cn=y
          EOF
          make defconfig

      - name: "Build app + zh-cn i18n (force, debug on failure)"
        run: |
          set -e
          cd "$SDK_DIR"

          # 确保当前 shell 的 PATH/PO2LMO 正确
          export PATH="$PWD/staging_dir/hostpkg/bin:$PWD/staging_dir/host/bin:$PATH"
          export PO2LMO="${PO2LMO:-$PWD/staging_dir/hostpkg/bin/po2lmo}"

          echo "Using po2lmo: $(command -v po2lmo || true)"
          test -x "$PO2LMO" || { echo "::error::po2lmo not found at $PO2LMO"; exit 1; }
          po2lmo -h || true

          # 预检：确认我们的包 Makefile 正确
          PKGDIR="package/luci-app-nodemanager"
          test -f "$PKGDIR/Makefile" || { echo "::error::$PKGDIR/Makefile missing"; exit 1; }
          grep -q 'feeds/luci/luci.mk' "$PKGDIR/Makefile" || {
            echo "::error::Makefile must include \`$(TOPDIR)/feeds/luci/luci.mk\`"; exit 1;
          }

          # 单线程 + 超详细日志编译，失败即 dump 关键信息
          set +e
          make -j1 V=s package/luci-app-nodemanager/compile
          RET=$?
          if [ $RET -ne 0 ]; then
            echo "==== DUMP: possible build logs ===="
            find build_dir -type f -name '*luci-app-nodemanager*log*' -printf '--- %p ---\n' -exec sed -n '1,200p' {} \; || true
            echo "==== DUMP: grep error lines (last 200) ===="
            find build_dir -type f -name '*luci-app-nodemanager*log*' -exec tail -n 200 {} \; | sed -n '/error:/I,$p' || true
            echo "==== DUMP: env variables ===="
            echo "PO2LMO=$PO2LMO"
            echo "PATH=$PATH"
            echo "PWD=$PWD"
            echo "==== DUMP: which po2lmo ===="
            which po2lmo || true
            ls -l staging_dir/host/bin/po2lmo || true
            ls -l staging_dir/hostpkg/bin/po2lmo || true
            exit $RET
          fi
          set -e

          # 显式构建中文语言包（兼容两种路径）
          set +e
          make -j1 V=s package/luci-i18n-nodemanager-zh-cn/compile
          RET=$?
          if [ $RET -ne 0 ]; then
            make -j1 V=s package/feeds/luci/luci-i18n-nodemanager-zh-cn/compile
            RET=$?
          fi
          if [ $RET -ne 0 ]; then
            echo "==== DUMP: i18n build logs ===="
            find build_dir -type f -name '*luci-i18n-nodemanager-zh-cn*log*' -printf '--- %p ---\n' -exec sed -n '1,200p' {} \; || true
            exit $RET
          fi

      - name: Collect artifacts
        run: |
          set -e
          cd "$SDK_DIR"
          OUT="$GITHUB_WORKSPACE/out/${{ matrix.target.name }}"
          mkdir -p "$OUT"
          find bin/packages -type f -name 'luci-app-nodemanager_*.ipk' -exec cp -v '{}' "$OUT/" \;
          find bin/packages -type f -name 'luci-i18n-nodemanager-zh-cn_*.ipk' -exec cp -v '{}' "$OUT/" \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-nodemanager-${{ matrix.target.name }}
          path: out/${{ matrix.target.name }}/*.ipk
          if-no-files-found: error
