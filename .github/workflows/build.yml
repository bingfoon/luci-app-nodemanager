name: build-luci-app-nodemanager
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: mediatek-filogic
            sdk:  https://downloads.openwrt.org/releases/24.10.2/targets/mediatek/filogic/openwrt-sdk-24.10.2-mediatek-filogic_gcc-13.3.0_musl.Linux-x86_64.tar.zst
          - name: x86-64
            sdk:  https://downloads.openwrt.org/releases/24.10.2/targets/x86/64/openwrt-sdk-24.10.2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gawk unzip libncurses5-dev zstd rsync file curl

      - name: Download & extract SDK
        run: |
          curl -L --fail -o sdk.tar.zst "${{ matrix.target.sdk }}"
          # 解压
          tar -I zstd -xf sdk.tar.zst
          # 取目录名并导出
          SDK_DIR="$(tar -I zstd -tf sdk.tar.zst | head -1 | cut -d/ -f1)"
          echo "SDK_DIR=$SDK_DIR" >> "$GITHUB_ENV"
          # 方便后续使用
          ln -s "$SDK_DIR" sdk

      - name: Setup feeds (luci only, openwrt-24.10)
        run: |
          cd "$SDK_DIR"
          BRANCH="openwrt-24.10"
          # 如果 SDK 里没有 scripts/feeds，则在线补齐
          if [ ! -x scripts/feeds ]; then
            mkdir -p scripts
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/feeds" -o scripts/feeds
            curl -fsSL "https://raw.githubusercontent.com/openwrt/openwrt/${BRANCH}/scripts/metadata.pm" -o scripts/metadata.pm
            chmod +x scripts/feeds
          fi
          # 只用 luci 源即可
          echo "src-git luci https://github.com/openwrt/luci.git;${BRANCH}" > feeds.conf
          ./scripts/feeds update luci
          # 安装构建 LuCI 所需的包和工具（含 po2lmo/host）
          ./scripts/feeds install -p luci po2lmo luci-base luci-compat

      - name: Put our package into SDK
        run: |
          cd "$GITHUB_WORKSPACE"
          PKGROOT="$GITHUB_WORKSPACE/$SDK_DIR/package/luci-app-nodemanager"
          rm -rf "$PKGROOT"
          mkdir -p "$PKGROOT"

          git archive --format=tar HEAD | tar -C "$PKGROOT" -xf -


      - name: Seed .config & defconfig
        run: |
          cd "$SDK_DIR"
          cat >> .config <<'EOF'
          CONFIG_TARGET_IMAGES_GZIP=y
          # 选择我们的主包 + 中文语言包
          CONFIG_PACKAGE_luci-app-nodemanager=y
          CONFIG_PACKAGE_luci-i18n-nodemanager-zh-cn=y
          EOF
          make defconfig

      - name: Build (app + zh-cn i18n)
        run: |
          cd "$SDK_DIR"
          # 先保证 po2lmo 主机工具可用（多余但稳）
          make package/po2lmo/host/compile -j$(nproc) V=sc
          # 编译主包和中文语言包（显式编译语言子包，确保一定产物）
          make package/luci-app-nodemanager/compile -j$(nproc) V=sc
          make package/luci-i18n-nodemanager-zh-cn/compile -j$(nproc) V=sc

      - name: Collect artifacts
        run: |
          cd "$SDK_DIR"
          mkdir -p "$GITHUB_WORKSPACE/out/${{ matrix.target.name }}"
          # 收集主包 + 中文 i18n 子包
          find bin/packages -type f -name 'luci-app-nodemanager_*.ipk' -exec cp -v '{}' "$GITHUB_WORKSPACE/out/${{ matrix.target.name }}/" \;
          find bin/packages -type f -name 'luci-i18n-nodemanager-zh-cn_*.ipk' -exec cp -v '{}' "$GITHUB_WORKSPACE/out/${{ matrix.target.name }}/" \;

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-nodemanager-${{ matrix.target.name }}
          path: out/${{ matrix.target.name }}/*.ipk
          if-no-files-found: error
