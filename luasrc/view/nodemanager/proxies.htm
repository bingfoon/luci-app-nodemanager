<%+header%>
<h2><%:Node Manager - Proxies%></h2>
<% if errmsg then %><div class="alert-message warning"><%=errmsg%></div><% end %>

<form id="proxyForm" method="post" action="<%=luci.dispatcher.build_url('admin/services/nodemanager/proxies')%>">
  <input type="hidden" name="token" value="<%=token%>"/>

  <table class="table">
    <thead>
      <tr>
        <th><%:Name%></th>
        <th><%:Server (IP or Domain)%></th>
        <th><%:Port%></th>
        <th><%:Username%></th>
        <th><%:Password%></th>
        <th><%:Bind IPs (/32)%></th>
        <th></th>
      </tr>
    </thead>
    <tbody id="proxyBody">
      <% for i,p in ipairs(proxies or {}) do
           local raw = bindmap and bindmap[p.name]
           local ipsval = ""
           if type(raw) == "table" then
             ipsval = table.concat(raw, ", ")
           elseif type(raw) == "string" then
             ipsval = raw
           else
             ipsval = ""
           end
      %>
      <tr>
        <td><input class="cbi-input-text" name="name[]" value="<%=p.name%>" required/></td>
        <td><input class="cbi-input-text" name="server[]" value="<%=p.server%>" required/></td>
        <td><input class="cbi-input-text" name="port[]" value="<%=p.port%>" required/></td>
        <td><input class="cbi-input-text" name="username[]" value="<%=p.username%>" required/></td>
        <td><input class="cbi-input-text" name="password[]" value="<%=p.password%>" required/></td>
        <td><input class="cbi-input-text" name="bindips[]" value="<%=ipsval%>" placeholder="192.168.8.101, 192.168.8.102"/></td>
        <td><button type="button" class="cbi-button cbi-button-remove" onclick="rmRow(this)">✕</button></td>
      </tr>
      <% end %>
      <% if not proxies or #proxies==0 then %>
      <tr>
        <td><input class="cbi-input-text" name="name[]" required/></td>
        <td><input class="cbi-input-text" name="server[]" required/></td>
        <td><input class="cbi-input-text" name="port[]" required/></td>
        <td><input class="cbi-input-text" name="username[]" required/></td>
        <td><input class="cbi-input-text" name="password[]" required/></td>
        <td><input class="cbi-input-text" name="bindips[]" placeholder="192.168.8.101, 192.168.8.102"/></td>
        <td><button type="button" class="cbi-button cbi-button-remove" onclick="rmRow(this)">✕</button></td>
      </tr>
      <% end %>
    </tbody>
  </table>
  <div>
    <button type="button" class="cbi-button cbi-button-add" onclick="addRow()"><%:Add%></button>
    <button id="saveBtn" type="submit" class="cbi-button cbi-button-apply"><%:Save%></button>
  </div>
</form>

<script>
function addRow() {
  const tr = document.createElement('tr');
  tr.innerHTML = `
    <td><input class="cbi-input-text" name="name[]" required/></td>
    <td><input class="cbi-input-text" name="server[]" required/></td>
    <td><input class="cbi-input-text" name="port[]" required/></td>
    <td><input class="cbi-input-text" name="username[]" required/></td>
    <td><input class="cbi-input-text" name="password[]" required/></td>
    <td><input class="cbi-input-text" name="bindips[]" placeholder="192.168.8.101, 192.168.8.102"/></td>
    <td><button type="button" class="cbi-button cbi-button-remove" onclick="rmRow(this)">✕</button></td>
  `;
  document.getElementById('proxyBody').appendChild(tr);
}
function rmRow(btn) { btn.closest('tr').remove(); }

async function postForm(form) {
  const token = "<%=token%>" || "";
  const url = form.action + (token ? ("?token="+encodeURIComponent(token)) : "");
  const btn = document.getElementById('saveBtn');
  btn && (btn.disabled = true);

  try {
    const resp = await fetch(url, {
      method: 'POST',
      body: new FormData(form),
      credentials: 'same-origin',
      headers: { 'X-Requested-With': 'XMLHttpRequest', 'Accept': 'application/json' }
    });
    const text = await resp.text();
    let j;
    try { j = JSON.parse(text); }
    catch (e) { alert('Save failed: HTTP ' + resp.status + '\\n' + text.slice(0, 200)); return; }
    if (j.code === 0) location.reload();
    else alert(j.msg || 'Error');
  } catch (err) {
    alert('Network error: ' + err);
  } finally {
    btn && (btn.disabled = false);
  }
}

document.getElementById('proxyForm').addEventListener('submit', function(e){
  e.preventDefault();
  postForm(e.target);
});
</script>

<%+footer%>