<%+header%>
<h2><%:Node Manager - Providers%></h2>

<form id="provForm" method="post" action="<%=luci.dispatcher.build_url('admin/services/nodemanager/providers')%>">
  <input type="hidden" name="token" value="<%=token%>"/>

  <table class="table">
    <thead>
      <tr>
        <th><%:Name%></th>
        <th>URL (http/https)</th>
        <th></th>
      </tr>
    </thead>
    <tbody id="provBody">
      <% for i,p in ipairs(providers or {}) do %>
      <tr>
        <td><input class="cbi-input-text" name="name[]" value="<%=p.name%>" required/></td>
        <td><input class="cbi-input-text" name="url[]" value="<%=p.url%>" placeholder="http://..." required/></td>
        <td><button type="button" class="cbi-button cbi-button-remove" onclick="rmRow(this)">✕</button></td>
      </tr>
      <% end %>
      <% if not providers or #providers==0 then %>
      <tr>
        <td><input class="cbi-input-text" name="name[]" required/></td>
        <td><input class="cbi-input-text" name="url[]" placeholder="http://..." required/></td>
        <td><button type="button" class="cbi-button cbi-button-remove" onclick="rmRow(this)">✕</button></td>
      </tr>
      <% end %>
    </tbody>
  </table>
  <div>
    <button type="button" class="cbi-button cbi-button-add" onclick="addRow()"><%:Add%></button>
    <button id="saveBtn" type="submit" class="cbi-button cbi-button-apply"><%:Save%></button>
  </div>
</form>

<script>
function addRow() {
  const tr = document.createElement('tr');
  tr.innerHTML = `
    <td><input class="cbi-input-text" name="name[]" required/></td>
    <td><input class="cbi-input-text" name="url[]" placeholder="http://..." required/></td>
    <td><button type="button" class="cbi-button cbi-button-remove" onclick="rmRow(this)">✕</button></td>
  `;
  document.getElementById('provBody').appendChild(tr);
}
function rmRow(btn){ btn.closest('tr').remove(); }

async function postForm(form) {
  const token = "<%=token%>" || "";
  const url = form.action + (token ? ("?token="+encodeURIComponent(token)) : "");
  const btn = document.getElementById('saveBtn'); btn && (btn.disabled = true);
  try {
    const resp = await fetch(url, {
      method:'POST',
      body: new FormData(form),
      credentials:'same-origin',
      headers:{'X-Requested-With':'XMLHttpRequest','Accept':'application/json'}
    });
    const text = await resp.text();
    let j; try{ j = JSON.parse(text) } catch(e){ alert('Save failed: HTTP '+resp.status+'\n'+text.slice(0,200)); return; }
    if (j.code===0) location.reload(); else alert(j.msg||'Error');
  } catch (e) { alert('Network error: '+e) } finally { btn && (btn.disabled=false) }
}
document.getElementById('provForm').addEventListener('submit', e=>{ e.preventDefault(); postForm(e.target); });
</script>
<%+footer%>